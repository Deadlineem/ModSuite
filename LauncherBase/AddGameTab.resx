<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="guna2BorderlessForm1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAfgAAAH8AAAD/wAAD/+AAB//4AB///gB/8=
</value>
  </data>
</root>